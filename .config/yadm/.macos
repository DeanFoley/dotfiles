#!/bin/bash

echo "Running MacOS-specific steps"

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# desired OS settings

# Always show scrollbars
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"

# Always expand Save dialog
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# enable repeating key input by holding
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

#Modify dock
defaults write com.apple.dock tilesize -int 32
defaults write com.apple.dock autohide-delay -float 0 
defaults write com.apple.dock autohide-time-modifier -float 0
defaults write com.apple.dock autohide -bool TRUE
defaults write com.apple.dock showhidden -bool TRUE
defaults write com.apple.dock magnification -boolean FALSE
defaults write com.apple.dock minimize-to-application -bool true
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true
defaults write com.apple.dock show-process-indicators -bool true
defaults write com.apple.dock launchanim -bool false
defaults write com.apple.dock workspaces-auto-swoosh -bool NO

# Show all files
defaults write com.apple.finder AppleShowAllFiles -bool YES 

# Set power management to avoid standby for 12 hours and adjust to my liking
sudo pmset -a standbydelay 43200
sudo pmset -b sleep 15 disksleep 10 displaysleep 5 halfdim 1
sudo pmset -c sleep 0 disksleep 0 displaysleep 30 halfdim 1

defaults write NSGlobalDomain AppleHighlightColor -string "1 0.75294118 0"

# Set sidebar icon size to medium
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

# Disable automatic capitalization as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable Resume system-wide
defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# Disable automatic termination of inactive apps
defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Disable auto-start-up when opening lid (MacBook-specific)
sudo nvram BootPreference=%00

# Disable automatic period substitution as it’s annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they’re annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Increase sound quality for Bluetooth headphones/headsets
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

#  Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0

# Show the ~/Library folder
chflags nohidden ~/Library

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
defaults write com.apple.finder FXInfoPanesExpanded -dict \
	General -bool true \
	OpenWith -bool true \
	Privileges -bool true

# Subpixel font rendering on all dispalys
defaults write NSGlobalDomain AppleFontSmoothing -int 2

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# Disable Dashboard
defaults write com.apple.dashboard mcx-disabled -bool true

# Don’t show Dashboard as a Space
defaults write com.apple.dock dashboard-in-overlay -bool true

# Don’t automatically rearrange Spaces based on most recent use
defaults write com.apple.dock mru-spaces -bool false

mkdir ~/Screenshots
defaults write com.apple.screencapture location ~/Screenshots/

nvram SystemAudioVolume=" "
nvram BootPreference=%00

killall SystemUIServer
killall Dock # Restart the Dock process

# get Xcode
xcode-select --install

# install Homebrew if it's missing
if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Brew installation
if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating Homebrew bundle"
    brew bundle --global

    if [ -f "$HOME/.Brewfile.local" ]; then 
        echo "Updating context-specific Homebrew bundle"
        brew bundle --file=".Brewfile.local"
    fi
fi

if [ -d "$HOME/.iterm2" ]; then
    echo "Setting iTerm preference folder"
    defaults write com.googlecode.iterm2 PrefsCustomFolder "$HOME/.iterm2"
    defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder 1
fi

# Code config
ln -sf ~/.vscode.json "$HOME/Library/Application Support/Code/User/settings.json"
